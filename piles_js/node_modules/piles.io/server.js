(function() {
  var auth, db, settings, sys, utils;
  sys = require('sys');
  db = require('piles.io/db');
  utils = require('piles.io/utils');
  settings = (require('piles.io/settings')).settings;
  auth = require('piles.io/auth');
  exports.register = function(app) {
    /*
        ## Middleware
        */
    var enableCors;
    enableCors = function(req, res, next) {
      res.header('Access-Control-Allow-Origin', 'http://' + settings.CONTENT_DOMAIN);
      return next();
    };
    /*
        ## API
        */
    app.get('/piles', enableCors, function(req, res) {
      if (!req.query.name) {
        return res.json([]);
      }
      return db.collection('piles', function(piles) {
        return piles.find({
          name: req.query.name
        }).toArray(function(err, piles) {
          return res.json(piles);
        });
      });
    });
    /*
        ## Pages
        */
    app.get('/login', function(req, res) {
      return res.render('login', {
        email: 'Email'
      });
    });
    app.post('/login', function(req, res) {
      var email, hashedPwd;
      if (!req.body.email || !req.body.password) {
        return res.render('login', {
          email: req.body.email,
          errors: ['No username or password']
        });
      }
      hashedPwd = utils.hashPassword(req.body.password);
      email = req.body.email.toLowerCase();
      return db.collection('users', function(users) {
        return users.findOne({
          email: email,
          password: hashedPwd
        }, function(err, user) {
          if (!user) {
            return res.render('login', {
              email: email,
              errors: ['Bad email or password']
            });
          }
          auth.doLogin(req, user);
          return db.collection('piles', function(piles) {
            return (piles.find({
              emails: email
            })).toArray(function(err, userPiles) {
              if (userPiles) {
                return res.redirect('/' + userPiles[0]['name']);
              } else {
                return res.redirect('/broke');
              }
            });
          });
        });
      });
    });
    app.get('/', function(req, res) {
      var authData;
      authData = auth.authData(req);
      if (auth.authData(req)) {
        return res.redirect('/' + authData.piles[0]['name']);
      } else {
        return res.redirect('/login');
      }
    });
    return app.get('/:pilename', function(req, res) {
      return db.collection('piles', function(piles) {
        return piles.findOne({
          name: req.params.pilename
        }, function(err, pile) {
          if (pile) {
            return res.redirect('http://' + settings.CONTENT_DOMAIN + '/app#' + req.params.pilename);
          } else {
            return res.send(404);
          }
        });
      });
    });
  };
}).call(this);
